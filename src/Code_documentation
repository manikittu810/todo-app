understanding the react components 
First component is typically loaded in React Apps : App component

parts of a component : 
1.view (JSX or Javascript)
2.Logic(JavaScript)
3.Styling(CSS)
4.State(Internal DataStore)
5.Props(Pass Data)
6.Remenber always start Recat Component name with a Capital Letter.
------------------------------------------------------------------------

State in React : 
Built-in react object used to contain data or information about the component.


Hooks are very to use
useState hook allows adding state to Function Components.

JSX is more stricter than HTML, it expects you to have closing tags.

you can also make use of empty wrapper like <> </>

always use () while returning the Components.

always use UpperCase for the Component Names. like 
function FunctionName(){
<!-- Some code -->
}

in JSX always put class as className='' in jsx

you can edit the css component by using the className , in css file use the className by using :
.App{
    <!-- write some css code -->
}
------------------------------------------------------------------------------

Javascript Best practices 

1.Each component its own file

----------------------------------------------------------------------------- 
Building a counter web page App

parts of a component
-view (JSX or javascript)
-Logic(javascript)
-Styling(Css)
-State(Internal Data Store) : Built-in React object used to contain data or information about the component.
     -useState allows adding state function to Function Components
        -useState return two things : 
                - 1.current state
                - 2.A function to update state.
        - Each instance of component has its own state
        - How to share state between components?
            - Move state "upwards"(to parent component)
-props(Pass data)
--------------------------------------------------------------------------------------

React and its Virtual DOM : 
here reacts takes a different approach to represent the UI.

React has this Virtual DOM (Kep in memory)
-React code upodates the virtual DOM
1. React creates a virtual DOM v1 on load of a page.
2. You perform an action
    -React creates Virtual DOM v2 as a result of your action.
    -React performs a difference between v1 and v2.
----------------------------------------------------------------------------------------

Exploring React props (properties)
you can pass "Props" (short for properties) object to a React Component.
Used for things that remain constant during lifetime of acomponent
    -example increment value of a specific component
----------------------------------------------------------------------------------------

We use useNavigate hook to redirect from one page another page , its more like a path variable in springboot.
we create the hook as const navigate = useNavigate();

and you can use navigate variable as (...in some condition) navigate('/welcome');
this is to navigate to /welcome page.
----------------------------------------------------------------------------------------

To call a rest api using react we use 'axios'
when using the axios , we can do three things -> then, catch,finally.
we define callback methods. 
everytime you use axios(some stmts).then() , what get back is called a 'promise'.
